{
  "contractName": "Token2",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/E/sanya/Blockchain lab/DEX/enoch-dex-core/contracts/Token2.sol\":\"Token2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/E/sanya/Blockchain lab/DEX/enoch-dex-core/contracts/Token2.sol\":{\"keccak256\":\"0x24c3d8c8d129ebd3ca26a057b21ffdda778689b64e77c809257736ed539c9ca2\",\"urls\":[\"bzz-raw://87ba9c65e9086b9ea83e37e7178e3fc5287a7a17bf636ebe42f0423e466f261a\",\"dweb:/ipfs/QmVfefKdkZ9UDaMZxeYEfmCid5WoGhJX416tzPuaZsASFv\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x98d9c3f119eabc9384b14d85702d9a1249760fc32ae8cb295f1071a064c6733a\",\"urls\":[\"bzz-raw://a3405e6d7e177d0ef81858e81dea76264c9b71a8dda1efe3911df79f45fbb848\",\"dweb:/ipfs/Qmf69RTdxy32UXNJPFQz8M8C6Shhf1i6B1NiYWzDA8FUnS\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xeb295b448107f6adee6c0861eba7cd58983eeb1a2bf9cd24b3df9c75fe17db75\",\"urls\":[\"bzz-raw://781a662595af8ecda052135a27529293189c1cdf40bc5e2934a62b3bc2b327ea\",\"dweb:/ipfs/QmNaGn5PyRCu3tfBu6mMwx3j2BHJiXWKiYGHSAu3au6P7S\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x5394db3bea189ac8c117f957e21f2b4369e7987ba8520613a5c62e56ba751d58\",\"urls\":[\"bzz-raw://722bf625ba82a71fdc7d6bb51f851c31c7cd7b43350e14a113017b10db9c34b2\",\"dweb:/ipfs/QmU9tqp2VoffKZDUwZNhZMAGrHrFkbWEK4LNXECmU7vGpc\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x40d9b79fcb6c1884f629d6e0c3a712cce9c8d0fb74c4ff1129ddab47fc99e39f\",\"urls\":[\"bzz-raw://704d6c201b995f4bd0776dc00f0995709c839d2fedf5350348287fc823f8bf30\",\"dweb:/ipfs/QmRftka4FSVBSnaTmz5bAUSctUdsnEZp8BuFrr6VCKFUN9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd45135fede71fe4b2f06ccc22c459f880912785065a13f5ebf85ebe3d07d632e\",\"urls\":[\"bzz-raw://e38e11ed61a168499a2128f65c4248f9cb76a12fb0c9f2ae0e0e0ade46c5ba9f\",\"dweb:/ipfs/QmdAEvzLRsCtT6Yp1ruyymfaQ4hDtQMmBFjYY9MB4YQSBm\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060408051808201825260068152652a37b5b2b71960d11b6020808301918252835180850190945260038452622a259960e91b9084015281519192916012916200005f916000919062000213565b5081516200007590600190602085019062000213565b506002805460ff191660ff9290921691909117905550620000a69050336c0c9f2c9cd04674edea40000000620000ac565b620002b8565b6001600160a01b03821662000108576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200012481600554620001b160201b62000a581790919060201c565b6005556001600160a01b0382166000908152600360209081526040909120546200015991839062000a58620001b1821b17901c565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156200020c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200025657805160ff191683800117855562000286565b8280016001018555821562000286579182015b828111156200028657825182559160200191906001019062000269565b506200029492915062000298565b5090565b620002b591905b808211156200029457600081556001016200029f565b90565b610c0980620002c86000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a0610405565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561040b565b6101fd6104b2565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104bb565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661051c565b6100d6610544565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105c2565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561063d565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610651565b60008054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103fc6103f5610689565b848461068d565b50600192915050565b60055490565b60006104188484846107d4565b6104a884610424610689565b6104a385604051806060016040528060288152602001610b3f6028913973ffffffffffffffffffffffffffffffffffffffff8a1660009081526004602052604081209061046f610689565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff6109a716565b61068d565b5060019392505050565b60025460ff1690565b60006103fc6104c8610689565b846104a385600460006104d9610689565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610a5816565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b60018054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b60006103fc6105cf610689565b846104a385604051806060016040528060258152602001610bb060259139600460006105f9610689565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6109a716565b60006103fc61064a610689565b84846107d4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205490565b3390565b73ffffffffffffffffffffffffffffffffffffffff83166106f9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b8c6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610765576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610af76022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316610840576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610b676025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166108ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610ad46023913960400191505060405180910390fd5b6108fc81604051806060016040528060268152602001610b196026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260036020526040902054919063ffffffff6109a716565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260036020526040808220939093559084168152205461093e908263ffffffff610a5816565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a155781810151838201526020016109fd565b50505050905090810190601f168015610a425780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610acc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158201b3862da77fcde7e7b406976fb1ec446b5bf385af145f279324c35a60b177b2e64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a0610405565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561040b565b6101fd6104b2565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104bb565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661051c565b6100d6610544565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105c2565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561063d565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610651565b60008054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103fc6103f5610689565b848461068d565b50600192915050565b60055490565b60006104188484846107d4565b6104a884610424610689565b6104a385604051806060016040528060288152602001610b3f6028913973ffffffffffffffffffffffffffffffffffffffff8a1660009081526004602052604081209061046f610689565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff6109a716565b61068d565b5060019392505050565b60025460ff1690565b60006103fc6104c8610689565b846104a385600460006104d9610689565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610a5816565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b60018054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b60006103fc6105cf610689565b846104a385604051806060016040528060258152602001610bb060259139600460006105f9610689565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6109a716565b60006103fc61064a610689565b84846107d4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205490565b3390565b73ffffffffffffffffffffffffffffffffffffffff83166106f9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b8c6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610765576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610af76022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316610840576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610b676025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166108ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610ad46023913960400191505060405180910390fd5b6108fc81604051806060016040528060268152602001610b196026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260036020526040902054919063ffffffff6109a716565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260036020526040808220939093559084168152205461093e908263ffffffff610a5816565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a155781810151838201526020016109fd565b50505050905090810190601f168015610a425780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610acc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158201b3862da77fcde7e7b406976fb1ec446b5bf385af145f279324c35a60b177b2e64736f6c63430005100032",
  "sourceMap": "156:167:5:-;;;203:117;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;433:167:19;;;;;;;;;;;-1:-1:-1;;;433:167:19;;;;;;;;;;;;;;;;;;-1:-1:-1;;;433:167:19;;;;522:12;;433:167;;;246:2:5;;522:12:19;;-1:-1:-1;;433:167:19;522:12;:::i;:::-;-1:-1:-1;545:16:19;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;572:9:19;:20;;-1:-1:-1;;572:20:19;;;;;;;;;;;;-1:-1:-1;267:45:5;;-1:-1:-1;273:10:5;285:26;267:5;:45::i;:::-;156:167;;6133:308:18;-1:-1:-1;;;;;6209:21:18;;6201:65;;;;;-1:-1:-1;;;6201:65:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;6294:24;6311:6;6294:12;;:16;;;;;;:24;;;;:::i;:::-;6279:12;:39;-1:-1:-1;;;;;6350:18:18;;;;;;:9;:18;;;;;;;;;:30;;6373:6;;6350:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;6329:18:18;;;;;;:9;:18;;;;;;;;:51;;;;6396:37;;;;;;;6329:18;;;;6396:37;;;;;;;;;;6133:308;;:::o;859:181:17:-;917:7;949:5;;;973:6;;;;965:46;;;;;-1:-1:-1;;;965:46:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:1;859:181;-1:-1:-1;;;859:181:17:o;156:167:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;156:167:5;;;-1:-1:-1;156:167:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "156:167:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;156:167:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:83:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;670:83:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2580:152:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2580:152:18;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1601:91;;;:::i;:::-;;;;;;;;;;;;;;;;3204:304;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3204:304:18;;;;;;;;;;;;;;;;;;:::i;1522:83:19:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3917:210:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3917:210:18;;;;;;;;;:::i;1755:110::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1755:110:18;;;;:::i;872:87:19:-;;;:::i;4630:261:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4630:261:18;;;;;;;;;:::i;2078:158::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2078:158:18;;;;;;;;;:::i;2299:134::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2299:134:18;;;;;;;;;;;:::i;670:83:19:-;740:5;733:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;707:13;;733:12;;740:5;;733:12;;740:5;733:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:83;:::o;2580:152:18:-;2646:4;2663:39;2672:12;:10;:12::i;:::-;2686:7;2695:6;2663:8;:39::i;:::-;-1:-1:-1;2720:4:18;2580:152;;;;:::o;1601:91::-;1672:12;;1601:91;:::o;3204:304::-;3293:4;3310:36;3320:6;3328:9;3339:6;3310:9;:36::i;:::-;3357:121;3366:6;3374:12;:10;:12::i;:::-;3388:89;3426:6;3388:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;3408:12;:10;:12::i;:::-;3388:33;;;;;;;;;;;;;-1:-1:-1;3388:33:18;;;:89;;:37;:89;:::i;:::-;3357:8;:121::i;:::-;-1:-1:-1;3496:4:18;3204:304;;;;;:::o;1522:83:19:-;1588:9;;;;1522:83;:::o;3917:210:18:-;3997:4;4014:83;4023:12;:10;:12::i;:::-;4037:7;4046:50;4085:10;4046:11;:25;4058:12;:10;:12::i;:::-;4046:25;;;;;;;;;;;;;;;;;;-1:-1:-1;4046:25:18;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1755:110::-;1839:18;;1812:7;1839:18;;;:9;:18;;;;;;;1755:110::o;872:87:19:-;944:7;937:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:13;;937:14;;944:7;;937:14;;944:7;937:14;;;;;;;;;;;;;;;;;;;;;;;;4630:261:18;4715:4;4732:129;4741:12;:10;:12::i;:::-;4755:7;4764:96;4803:15;4764:96;;;;;;;;;;;;;;;;;:11;:25;4776:12;:10;:12::i;:::-;4764:25;;;;;;;;;;;;;;;;;;-1:-1:-1;4764:25:18;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2078:158::-;2147:4;2164:42;2174:12;:10;:12::i;:::-;2188:9;2199:6;2164:9;:42::i;2299:134::-;2398:18;;;;2371:7;2398:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2299:134::o;806:98:16:-;886:10;806:98;:::o;7561:338:18:-;7655:19;;;7647:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7734:21;;;7726:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7807:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7859:32;;;;;;;;;;;;;;;;;7561:338;;;:::o;5381:471::-;5479:20;;;5471:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5560:23;;;5552:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5656;5678:6;5656:71;;;;;;;;;;;;;;;;;:17;;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;5636:17;;;;;;;;:9;:17;;;;;;:91;;;;5761:20;;;;;;;:32;;5786:6;5761:32;:24;:32;:::i;:::-;5738:20;;;;;;;;:9;:20;;;;;;;;;:55;;;;5809:35;;;;;;;5738:20;;5809:35;;;;;;;;;;;;;5381:471;;;:::o;1788:192:17:-;1874:7;1910:12;1902:6;;;;1894:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1894:29:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1946:5:17;;;1788:192::o;859:181::-;917:7;949:5;;;973:6;;;;965:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:1;859:181;-1:-1:-1;;;859:181:17:o",
  "source": "pragma solidity >= 0.5.16;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\n\r\ncontract Token2 is ERC20Detailed, ERC20 {\r\n    constructor() ERC20Detailed('Token2','TK2',18) public{\r\n        _mint(msg.sender, 1000000000000 * (10 ** 18));\r\n    }\r\n}",
  "sourcePath": "E:/sanya/Blockchain lab/DEX/enoch-dex-core/contracts/Token2.sol",
  "ast": {
    "absolutePath": "/E/sanya/Blockchain lab/DEX/enoch-dex-core/contracts/Token2.sol",
    "exportedSymbols": {
      "Token2": [
        1724
      ]
    },
    "id": 1725,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1697,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:26:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 1698,
        "nodeType": "ImportDirective",
        "scope": 1725,
        "sourceUnit": 3136,
        "src": "30:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1699,
        "nodeType": "ImportDirective",
        "scope": 1725,
        "sourceUnit": 3078,
        "src": "95:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1700,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3135,
              "src": "175:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$3135",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1701,
            "nodeType": "InheritanceSpecifier",
            "src": "175:13:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1702,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3077,
              "src": "190:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3077",
                "typeString": "contract ERC20"
              }
            },
            "id": 1703,
            "nodeType": "InheritanceSpecifier",
            "src": "190:5:5"
          }
        ],
        "contractDependencies": [
          2485,
          3077,
          3135,
          3204
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1724,
        "linearizedBaseContracts": [
          1724,
          3077,
          3135,
          3204,
          2485
        ],
        "name": "Token2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1722,
              "nodeType": "Block",
              "src": "256:64:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1712,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5359,
                          "src": "273:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "273:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000000"
                        },
                        "id": 1719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030303030303030303030",
                          "id": 1714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "285:13:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1000000000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 1717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 1715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "302:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3138",
                                "id": 1716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "308:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "302:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 1718,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "301:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "285:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000000"
                        }
                      ],
                      "id": 1711,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2961,
                      "src": "267:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "267:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1721,
                  "nodeType": "ExpressionStatement",
                  "src": "267:45:5"
                }
              ]
            },
            "documentation": null,
            "id": 1723,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "546f6b656e32",
                    "id": 1706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "231:8:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2c15a7b8cfc5bd79acf3c235976ff8f776eab68c57adce369465398e58654531",
                      "typeString": "literal_string \"Token2\""
                    },
                    "value": "Token2"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "544b32",
                    "id": 1707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "240:5:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4920950a4ac3f0a942c5d360e7c2a1d6ac16f7927b94c5d1ace156c93112a152",
                      "typeString": "literal_string \"TK2\""
                    },
                    "value": "TK2"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 1708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "246:2:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 1709,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1705,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3135,
                  "src": "217:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$3135_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "217:32:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "214:2:5"
            },
            "returnParameters": {
              "id": 1710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:0:5"
            },
            "scope": 1724,
            "src": "203:117:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1725,
        "src": "156:167:5"
      }
    ],
    "src": "0:323:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/E/sanya/Blockchain lab/DEX/enoch-dex-core/contracts/Token2.sol",
      "exportedSymbols": {
        "Token2": [
          1724
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".16"
          ]
        },
        "id": 1697,
        "name": "PragmaDirective",
        "src": "0:26:5"
      },
      {
        "attributes": {
          "SourceUnit": 3136,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
          "scope": 1725,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1698,
        "name": "ImportDirective",
        "src": "30:63:5"
      },
      {
        "attributes": {
          "SourceUnit": 3078,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 1725,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1699,
        "name": "ImportDirective",
        "src": "95:55:5"
      },
      {
        "attributes": {
          "contractDependencies": [
            2485,
            3077,
            3135,
            3204
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1724,
            3077,
            3135,
            3204,
            2485
          ],
          "name": "Token2",
          "scope": 1725
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Detailed",
                  "referencedDeclaration": 3135,
                  "type": "contract ERC20Detailed"
                },
                "id": 1700,
                "name": "UserDefinedTypeName",
                "src": "175:13:5"
              }
            ],
            "id": 1701,
            "name": "InheritanceSpecifier",
            "src": "175:13:5"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20",
                  "referencedDeclaration": 3077,
                  "type": "contract ERC20"
                },
                "id": 1702,
                "name": "UserDefinedTypeName",
                "src": "190:5:5"
              }
            ],
            "id": 1703,
            "name": "InheritanceSpecifier",
            "src": "190:5:5"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1724,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1704,
                "name": "ParameterList",
                "src": "214:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1710,
                "name": "ParameterList",
                "src": "256:0:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3135,
                      "type": "type(contract ERC20Detailed)",
                      "value": "ERC20Detailed"
                    },
                    "id": 1705,
                    "name": "Identifier",
                    "src": "217:13:5"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "546f6b656e32",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Token2\"",
                      "value": "Token2"
                    },
                    "id": 1706,
                    "name": "Literal",
                    "src": "231:8:5"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "544b32",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"TK2\"",
                      "value": "TK2"
                    },
                    "id": 1707,
                    "name": "Literal",
                    "src": "240:5:5"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "3138",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 18",
                      "value": "18"
                    },
                    "id": 1708,
                    "name": "Literal",
                    "src": "246:2:5"
                  }
                ],
                "id": 1709,
                "name": "ModifierInvocation",
                "src": "217:32:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2961,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 1711,
                            "name": "Identifier",
                            "src": "267:5:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5359,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1712,
                                "name": "Identifier",
                                "src": "273:3:5"
                              }
                            ],
                            "id": 1713,
                            "name": "MemberAccess",
                            "src": "273:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000000000000"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "int_const 1000000000000000000000000000000"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31303030303030303030303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1000000000000",
                                  "value": "1000000000000"
                                },
                                "id": 1714,
                                "name": "Literal",
                                "src": "285:13:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "int_const 1000000000000000000"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "operator": "**",
                                      "type": "int_const 1000000000000000000"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 1715,
                                        "name": "Literal",
                                        "src": "302:2:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3138",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 18",
                                          "value": "18"
                                        },
                                        "id": 1716,
                                        "name": "Literal",
                                        "src": "308:2:5"
                                      }
                                    ],
                                    "id": 1717,
                                    "name": "BinaryOperation",
                                    "src": "302:8:5"
                                  }
                                ],
                                "id": 1718,
                                "name": "TupleExpression",
                                "src": "301:10:5"
                              }
                            ],
                            "id": 1719,
                            "name": "BinaryOperation",
                            "src": "285:26:5"
                          }
                        ],
                        "id": 1720,
                        "name": "FunctionCall",
                        "src": "267:45:5"
                      }
                    ],
                    "id": 1721,
                    "name": "ExpressionStatement",
                    "src": "267:45:5"
                  }
                ],
                "id": 1722,
                "name": "Block",
                "src": "256:64:5"
              }
            ],
            "id": 1723,
            "name": "FunctionDefinition",
            "src": "203:117:5"
          }
        ],
        "id": 1724,
        "name": "ContractDefinition",
        "src": "156:167:5"
      }
    ],
    "id": 1725,
    "name": "SourceUnit",
    "src": "0:323:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1626336426492": {
      "events": {},
      "links": {},
      "address": "0xaf5C4C6C7920B4883bC6252e9d9B8fE27187Cf68",
      "transactionHash": "0x168f5f800c2be159f99e874328911fabca90b315d404dc23dd9af5d97de84c2a"
    },
    "1626498879147": {
      "events": {},
      "links": {},
      "address": "0xD833215cBcc3f914bD1C9ece3EE7BF8B14f841bb",
      "transactionHash": "0xe58def34481300ebc7c8d54c0b82486c26d824a4814dd4a453c6dae017ef7a10"
    },
    "1626617794518": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc29135482daEb5441520BaC6e8c97bFf194b24eE",
      "transactionHash": "0xb078ec5e45dc4afd7e7d12b733fd105774163decb6420941a73109c0a523511b"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-21T05:30:11.003Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}